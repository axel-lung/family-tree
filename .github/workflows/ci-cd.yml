name: CI/CD
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/family-tree-frontend:latest
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/family-tree-backend:latest
      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
        run: |
          # Installer SSH
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh
          mv private_key ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

          # Copier docker-compose.yml et .env
          ssh $SSH_USER@$SSH_HOST "mkdir -p /opt/family-tree && echo 'DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME' > /opt/family-tree/.env && echo 'JWT_SECRET=$JWT_SECRET' >> /opt/family-tree/.env && echo 'DB_USER=$DB_USER' >> /opt/family-tree/.env && echo 'DB_PASSWORD=$DB_PASSWORD' >> /opt/family-tree/.env && echo 'DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD' >> /opt/family-tree/.env"
          scp docker-compose.yml $SSH_USER@$SSH_HOST:/opt/family-tree/docker-compose.yml
          scp api/src/init-db.sql $SSH_USER@$SSH_HOST:/opt/family-tree/init-db.sql

          # DÃ©ployer sur le serveur
          ssh $SSH_USER@$SSH_HOST << 'EOF'
            cd /opt/family-tree
            docker-compose pull
            docker-compose up -d
          EOF